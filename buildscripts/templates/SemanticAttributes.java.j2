/*
 * Copyright The OpenTelemetry Authors
 * SPDX-License-Identifier: Apache-2.0
 */


{%- macro to_java_return_type(type) -%}
  {%- if type == "string" -%}
    String
  {%- elif type == "string[]" -%}
    List<String>
  {%- elif type == "boolean" -%}
    boolean
  {%- elif type == "int" -%}
    long
  {%- elif type == "double" -%}
    double
  {%- else -%}
    {{type}}
  {%- endif -%}
{%- endmacro %}
{%- macro to_java_key_type(type) -%}
  {%- if type == "string" -%}
    stringKey
  {%- elif type == "string[]" -%}
    stringArrayKey
  {%- elif type == "boolean" -%}
    booleanKey
  {%- elif type == "int" -%}
    longKey
  {%- elif type == "double" -%}
    doubleKey
  {%- else -%}
    {{lowerFirst(type)}}Key
  {%- endif -%}
{%- endmacro %}
{%- macro print_value(type, value) -%}
  {{ "\"" if type == "String"}}{{value}}{{ "\"" if type == "String"}}
{%- endmacro %}
{%- macro upFirst(text) -%}
  {{ text[0]|upper}}{{text[1:] }}
{%- endmacro %}
{%- macro lowerFirst(text) -%}
  {{ text[0]|lower}}{{text[1:] }}
{%- endmacro %}

package {{pkg | trim}};

import static io.opentelemetry.api.common.AttributeKey.booleanKey;
import static io.opentelemetry.api.common.AttributeKey.doubleKey;
import static io.opentelemetry.api.common.AttributeKey.longKey;
import static io.opentelemetry.api.common.AttributeKey.stringKey;
import static io.opentelemetry.api.common.AttributeKey.stringArrayKey;

import io.opentelemetry.api.common.AttributeKey;
import java.util.List;

// DO NOT EDIT, this is an Auto-generated file from buildscripts{{template}}
@SuppressWarnings("unused")
public final class {{class}} {
  /**
   * The URL of the OpenTelemetry schema for these keys and values.
   */
  public static final String SCHEMA_URL = "{{schemaUrl}}";
  {%- for attribute in attributes if attribute.is_local and not attribute.ref %}

  /**
  * {{attribute.brief | render_markdown(code="{{@code {0}}}", paragraph="{0}")}}
    {%- if attribute.note %}
  *
  * <p>Notes:
        {# NOTE: replace("> ", "") removes the following problematic characters which produce mangled javadoc:  #}
        {# https://github.com/open-telemetry/semantic-conventions/blob/c83a10a9c33c18a769835e959200d0e24dc708fe/model/resource/k8s.yaml#L34-L38  #}
        <ul> {{attribute.note | replace("> ", "") | render_markdown(code="{{@code {0}}}", paragraph="<li>{0}</li>", list="{0}")}} </ul>

    {%- endif %}
    {%- if (attribute.stability | string())  == "StabilityLevel.DEPRECATED" %}
  *
  * @deprecated {{attribute.brief | to_doc_brief}}.
    {%- endif %}
  */
    {%- if (attribute.stability | string()) == "StabilityLevel.DEPRECATED"  %}
  @Deprecated
    {%- endif %}
  public static final AttributeKey<{{upFirst(to_java_return_type(attribute.attr_type | string))}}> {{attribute.fqn | to_const_name}} = {{to_java_key_type(attribute.attr_type | string)}}("{{attribute.fqn}}");
  {%- endfor %}

  // Enum definitions
  {%- for attribute in attributes if attribute.is_local and not attribute.ref %}
  {%- if attribute.is_enum %}
  {%- set class_name = attribute.fqn | to_camelcase(True) ~ "Values" %}
  {%- set type = to_java_return_type(attribute.attr_type.enum_type) %}
  public static final class {{class_name}} {
    {%- for member in attribute.attr_type.members %}
      /** {% filter escape %}{{member.brief | to_doc_brief}}.{% endfilter %} */
      public static final {{ type }} {{ member.member_id | to_const_name }} = {{ print_value(type, member.value) }};

    {%- endfor %}

      private {{ class_name }}() {}
  }

  {% endif %}
  {%- endfor %}

  {%- if class == "SemanticAttributes" %}
  // Manually defined and not YET in the YAML
  /**
   * The name of an event describing an exception.
   *
   * <p>Typically an event with that name should not be manually created. Instead {@link
   * io.opentelemetry.api.trace.Span#recordException(Throwable)} should be used.
   */
  public static final String EXCEPTION_EVENT_NAME = "exception";

  /**
   * The name of the keyspace being accessed.
   *
   * @deprecated this item has been removed as of 1.8.0 of the semantic conventions. Please use {@link SemanticAttributes#DB_NAME} instead.
   */
  @Deprecated
  public static final AttributeKey<String> DB_CASSANDRA_KEYSPACE =
      stringKey("db.cassandra.keyspace");

  /**
   * The <a href="https://hbase.apache.org/book.html#_namespace">HBase namespace</a> being accessed.
   *
   * @deprecated this item has been removed as of 1.8.0 of the semantic conventions. Please use {@link SemanticAttributes#DB_NAME} instead.
   */
  @Deprecated
  public static final AttributeKey<String> DB_HBASE_NAMESPACE = stringKey("db.hbase.namespace");

  /**
   * The size of the uncompressed request payload body after transport decoding. Not set if
   * transport encoding not used.
   *
   * @deprecated  this item has been removed as of 1.13.0 of the semantic conventions. Please use {@link SemanticAttributes#HTTP_REQUEST_CONTENT_LENGTH} instead.
   */
  @Deprecated
  public static final AttributeKey<Long> HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED =
      longKey("http.request_content_length_uncompressed");

  /**
   * @deprecated This item has been removed as of 1.13.0 of the semantic conventions. Please use {@link SemanticAttributes#HTTP_RESPONSE_CONTENT_LENGTH} instead.
   */
  @Deprecated
  public static final AttributeKey<Long> HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED =
        longKey("http.response_content_length_uncompressed");

  /**
   * @deprecated This item has been removed as of 1.13.0 of the semantic conventions. Please use
   *     {@link SemanticAttributes#NET_HOST_NAME} instead.
   */
  @Deprecated
  public static final AttributeKey<String> HTTP_SERVER_NAME = stringKey("http.server_name");

  /**
   * @deprecated This item has been removed as of 1.13.0 of the semantic conventions. Please use
   *     {@link SemanticAttributes#NET_HOST_NAME} instead.
   */
  @Deprecated
  public static final AttributeKey<String> HTTP_HOST = stringKey("http.host");

  /**
   * @deprecated This item has been removed as of 1.13.0 of the semantic conventions. Please use {@link SemanticAttributes#NET_SOCK_PEER_ADDR} instead.
   */
  @Deprecated
  public static final AttributeKey<String> NET_PEER_IP = stringKey("net.peer.ip");

  /**
   * @deprecated This item has been removed as of 1.13.0 of the semantic conventions. Please use {@link SemanticAttributes#NET_SOCK_HOST_ADDR} instead.
   */
  @Deprecated
  public static final AttributeKey<String> NET_HOST_IP = stringKey("net.host.ip");

  /**
   * The ordinal number of request re-sending attempt.
   * @deprecated This item has been removed as of 1.15.0 of the semantic conventions. Use {@link SemanticAttributes#HTTP_RESEND_COUNT} instead.
   */
  @Deprecated
  public static final AttributeKey<Long> HTTP_RETRY_COUNT = longKey("http.retry_count");


 /**
  * A string identifying the messaging system.
  * @deprecated This item has been removed as of 1.17.0 of the semantic conventions. Use {@link SemanticAttributes#MESSAGING_DESTINATION_NAME} instead.
  */
  @Deprecated
  public static final AttributeKey<String> MESSAGING_DESTINATION =
      stringKey("messaging.destination");

 /**
  * A boolean that is true if the message destination is temporary.
  * @deprecated This item has been removed as of 1.17.0 of the semantic conventions. Use {@link SemanticAttributes#MESSAGING_DESTINATION_TEMPORARY} instead.
  */
  @Deprecated
  public static final AttributeKey<Boolean> MESSAGING_TEMP_DESTINATION =
      booleanKey("messaging.temp_destination");

 /**
  * The name of the transport protocol.
  * @deprecated This item has been removed as of 1.17.0 of the semantic conventions. Use {@link SemanticAttributes#NET_PROTOCOL_NAME} instead.
  */
  @Deprecated
  public static final AttributeKey<String> MESSAGING_PROTOCOL = stringKey("messaging.protocol");

  /**
  * The version of the transport protocol.
  * @deprecated This item has been removed as of 1.17.0 of the semantic conventions. Use {@link SemanticAttributes#NET_PROTOCOL_VERSION} instead.
  */
  @Deprecated
  public static final AttributeKey<String> MESSAGING_PROTOCOL_VERSION =
      stringKey("messaging.protocol_version");

  /**
  * Connection string.
  * @deprecated This item has been removed as of 1.17.0 of the semantic conventions. There is no replacement.
  */
  @Deprecated
  public static final AttributeKey<String> MESSAGING_URL = stringKey("messaging.url");

   /**
    * The <a href="#conversations">conversation ID</a> identifying the conversation to which the
    * message belongs, represented as a string. Sometimes called &quot;Correlation ID&quot;.
    * @deprecated This item has been removed as of 1.17.0 of the semantic conventions. Use {@link SemanticAttributes#MESSAGING_MESSAGE_CONVERSATION_ID} instead.
    */
   @Deprecated
   public static final AttributeKey<String> MESSAGING_CONVERSATION_ID =
      stringKey("messaging.conversation_id");

  /**
   * RabbitMQ message routing key.
   * @deprecated This item has been removed as of 1.17.0 of the semantic conventions. Use {@link SemanticAttributes#MESSAGING_RABBITMQ_DESTINATION_ROUTING_KEY} instead.
   */
  @Deprecated
  public static final AttributeKey<String> MESSAGING_RABBITMQ_ROUTING_KEY =
      stringKey("messaging.rabbitmq.routing_key");

  /**
   * Partition the message is received from.
   * @deprecated This item has been removed as of 1.17.0 of the semantic conventions. Use {@link SemanticAttributes#MESSAGING_KAFKA_SOURCE_PARTITION} instead.
   */
   @Deprecated
  public static final AttributeKey<Long> MESSAGING_KAFKA_PARTITION =
      longKey("messaging.kafka.partition");

  /**
   * A boolean that is true if the message is a tombstone.
   * @deprecated This item has been removed as of 1.17.0 of the semantic conventions. Use {@link SemanticAttributes#MESSAGING_KAFKA_MESSAGE_TOMBSTONE} instead.
   */
  @Deprecated
  public static final AttributeKey<Boolean> MESSAGING_KAFKA_TOMBSTONE =
      booleanKey("messaging.kafka.tombstone");

  /**
   * The timestamp in milliseconds that the delay message is expected to be delivered to consumer.
   * @deprecated This item has been removed as of 1.17.0 of the semantic conventions. Use {@link SemanticAttributes#MESSAGING_ROCKETMQ_MESSAGE_DELIVERY_TIMESTAMP} instead.
   */
  @Deprecated
  public static final AttributeKey<Long> MESSAGING_ROCKETMQ_DELIVERY_TIMESTAMP =
      longKey("messaging.rocketmq.delivery_timestamp");


  /**
   * The delay time level for delay message, which determines the message delay time.
   * @deprecated This item has been removed as of 1.17.0 of the semantic conventions. Use {@link SemanticAttributes#MESSAGING_ROCKETMQ_MESSAGE_DELAY_TIME_LEVEL} instead.
   */
  @Deprecated
  public static final AttributeKey<Long> MESSAGING_ROCKETMQ_DELAY_TIME_LEVEL =
      longKey("messaging.rocketmq.delay_time_level");

  /** 
   * The name of the instrumentation scope - ({@code InstrumentationScope.Name} in OTLP).
   * @deprecated This item has been moved, use {@link io.opentelemetry.semconv.ResourceAttributes#OTEL_SCOPE_NAME} instead.
   */
  @Deprecated
  public static final AttributeKey<String> OTEL_SCOPE_NAME = stringKey("otel.scope.name");

  /** 
   * The version of the instrumentation scope - ({@code InstrumentationScope.Version} in OTLP).
   * @deprecated This item has been moved, use {@link io.opentelemetry.semconv.ResourceAttributes#OTEL_SCOPE_VERSION} instead.
   */
  @Deprecated
  public static final AttributeKey<String> OTEL_SCOPE_VERSION = stringKey("otel.scope.version");

  /**
   * The execution ID of the current function execution.
   * @deprecated This item has been renamed in 1.19.0 version of the semantic conventions. 
   * Use {@link SemanticAttributes#FAAS_INVOCATION_ID} instead.
   */
  @Deprecated
  public static final AttributeKey<String> FAAS_EXECUTION = stringKey("faas.execution");

  /**
   * Value of the <a href="https://www.rfc-editor.org/rfc/rfc9110.html#field.user-agent">HTTP
   * User-Agent</a> header sent by the client.
   * @deprecated This item has been renamed in 1.19.0 version of the semantic conventions. 
   * Use {@link SemanticAttributes#USER_AGENT_ORIGINAL} instead.
   */
  @Deprecated
  public static final AttributeKey<String> HTTP_USER_AGENT = stringKey("http.user_agent");

  /**
   * Deprecated.
   *
   * @deprecated Deprecated, use the {@link io.opentelemetry.semconv.ResourceAttributes#OTEL_SCOPE_NAME} attribute.
   */
  @Deprecated
  public static final AttributeKey<String> OTEL_LIBRARY_NAME = stringKey("otel.library.name");

  /**
   * Deprecated.
   *
   * @deprecated Deprecated, use the {@link io.opentelemetry.semconv.ResourceAttributes#OTEL_SCOPE_VERSION} attribute.
   */
  @Deprecated
  public static final AttributeKey<String> OTEL_LIBRARY_VERSION = stringKey("otel.library.version");

  /**
   * Kind of HTTP protocol used.
   * @deprecated This item has been removed as of 1.20.0 of the semantic conventions.
   */
  @Deprecated
  public static final AttributeKey<String> HTTP_FLAVOR = stringKey("http.flavor");

  /**
   * Enum definitions for {@link #HTTP_FLAVOR}.
   * @deprecated This item has been removed as of 1.20.0 of the semantic conventions.
   */
  @Deprecated
  public static final class HttpFlavorValues {
    /** HTTP/1.0. */
    public static final String HTTP_1_0 = "1.0";

    /** HTTP/1.1. */
    public static final String HTTP_1_1 = "1.1";

    /** HTTP/2. */
    public static final String HTTP_2_0 = "2.0";

    /** HTTP/3. */
    public static final String HTTP_3_0 = "3.0";

    /** SPDY protocol. */
    public static final String SPDY = "SPDY";

    /** QUIC protocol. */
    public static final String QUIC = "QUIC";

    private HttpFlavorValues() {}
  }

  /**
   * Application layer protocol used. The value SHOULD be normalized to lowercase.
   * @deprecated This item has been removed as of 1.20.0 of the semantic conventions. Use {@link SemanticAttributes#NET_PROTOCOL_NAME} instead.
   */
  @Deprecated
  public static final AttributeKey<String> NET_APP_PROTOCOL_NAME = stringKey("net.app.protocol.name");

  /**
   * Version of the application layer protocol used. See note below.
   *
   * <p>Notes:
   *
   * <ul>
   *   <li>{@code net.app.protocol.version} refers to the version of the protocol used and might be
   *       different from the protocol client's version. If the HTTP client used has a version of
   *       {@code 0.27.2}, but sends HTTP version {@code 1.1}, this attribute should be set to
   *       {@code 1.1}.
   * </ul>
   * @deprecated This item has been removed as of 1.20.0 of the semantic conventions. Use {@link SemanticAttributes#NET_PROTOCOL_VERSION} instead.
   */
  @Deprecated
  public static final AttributeKey<String> NET_APP_PROTOCOL_VERSION = stringKey("net.app.protocol.version");

  /**
   * The kind of message destination.
   * @deprecated This item has been removed as of 1.20.0 of the semantic conventions.
   */
  @Deprecated
  public static final AttributeKey<String> MESSAGING_DESTINATION_KIND = stringKey("messaging.destination.kind");

  /**
   * Enum values for {@link #MESSAGING_DESTINATION_KIND}.
   * @deprecated This item has been removed as of 1.20.0 of the semantic conventions.
   */
  @Deprecated
  public static final class MessagingDestinationKindValues {
    /** A message sent to a queue. */
    public static final String QUEUE = "queue";

    /** A message sent to a topic. */
    public static final String TOPIC = "topic";

    private MessagingDestinationKindValues() {}
  }

  /**
   * The kind of message source.
   * @deprecated This item has been removed as of 1.20.0 of the semantic conventions.
   */
  @Deprecated
  public static final AttributeKey<String> MESSAGING_SOURCE_KIND = stringKey("messaging.source.kind");

  /**
   * Enum values for {@link #MESSAGING_SOURCE_KIND}.
   * @deprecated This item has been removed as of 1.20.0 of the semantic conventions.
   */
  @Deprecated
  public static final class MessagingSourceKindValues {
    /** A message received from a queue. */
    public static final String QUEUE = "queue";

    /** A message received from a topic. */
    public static final String TOPIC = "topic";

    private MessagingSourceKindValues() {}
  }

  /**
   * The internet connection type currently being used by the host.
   * @deprecated This item has been removed in 1.21.0 version of the semantic conventions. Use {@link SemanticAttributes#NETWORK_CONNECTION_TYPE} instead.
   */
  @Deprecated
  public static final AttributeKey<String> NET_HOST_CONNECTION_TYPE =
      stringKey("net.host.connection.type");

  /**
   * This describes more details regarding the connection.type. It may be the type of cell
   * technology connection, but it could be used for describing details about a wifi connection.
   * @deprecated This item has been removed in 1.21.0 version of the semantic conventions. Use {@link SemanticAttributes#NETWORK_CONNECTION_SUBTYPE} instead.
   */
  @Deprecated
  public static final AttributeKey<String> NET_HOST_CONNECTION_SUBTYPE =
      stringKey("net.host.connection.subtype");

  /**
   * The name of the mobile carrier.
   * @deprecated This item has been removed in 1.21.0 version of the semantic conventions. Use {@link SemanticAttributes#NETWORK_CARRIER_NAME} instead.
   */
  @Deprecated
  public static final AttributeKey<String> NET_HOST_CARRIER_NAME =
      stringKey("net.host.carrier.name");

  /**
   * The mobile carrier country code.
   * @deprecated This item has been removed in 1.21.0 version of the semantic conventions. Use {@link SemanticAttributes#NETWORK_CARRIER_MCC} instead.
   */
  @Deprecated
  public static final AttributeKey<String> NET_HOST_CARRIER_MCC = stringKey("net.host.carrier.mcc");

  /**
   * The mobile carrier network code.
   * @deprecated This item has been removed in 1.21.0 version of the semantic conventions. Use {@link SemanticAttributes#NETWORK_CARRIER_MNC} instead.
   */
  @Deprecated
  public static final AttributeKey<String> NET_HOST_CARRIER_MNC = stringKey("net.host.carrier.mnc");

  /**
   * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.
   * @deprecated This item has been removed in 1.21.0 version of the semantic conventions. Use {@link SemanticAttributes#NETWORK_CARRIER_ICC} instead.
   */
  @Deprecated
  public static final AttributeKey<String> NET_HOST_CARRIER_ICC = stringKey("net.host.carrier.icc");

  /**
   * The IP address of the original client behind all proxies, if known (e.g. from <a
   * href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For">X-Forwarded-For</a>).
   *
   * <p>Notes:
   *
   * <ul>
   *   <li>This is not necessarily the same as {@code net.sock.peer.addr}, which would identify the
   *       network-level peer, which may be a proxy.
   *   <li>This attribute should be set when a source of information different from the one used for
   *       {@code net.sock.peer.addr}, is available even if that other source just confirms the same
   *       value as {@code net.sock.peer.addr}. Rationale: For {@code net.sock.peer.addr}, one
   *       typically does not know if it comes from a proxy, reverse proxy, or the actual client.
   *       Setting {@code http.client_ip} when it's the same as {@code net.sock.peer.addr} means
   *       that one is at least somewhat confident that the address is not that of the closest
   *       proxy.
   * </ul>
   * @deprecated This item has been removed in 1.21.0 version of the semantic conventions. Use {@link SemanticAttributes#CLIENT_ADDRESS} instead.
   */
  @Deprecated
  public static final AttributeKey<String> HTTP_CLIENT_IP = stringKey("http.client_ip");

  /**
   * The message source name.
   *
   * <p>Notes:
   *
   * <ul>
   *   <li>Source name SHOULD uniquely identify a specific queue, topic, or other entity within the
   *       broker. If the broker does not have such notion, the source name SHOULD uniquely identify
   *       the broker.
   * </ul>
   * @deprecated This item has been removed in 1.21.0 version of the semantic conventions.
   */
  @Deprecated
  public static final AttributeKey<String> MESSAGING_SOURCE_NAME =
      stringKey("messaging.source.name");

  /**
   * Low cardinality representation of the messaging source name.
   *
   * <p>Notes:
   *
   * <ul>
   *   <li>Source names could be constructed from templates. An example would be a source name
   *       involving a user name or product id. Although the source name in this case is of high
   *       cardinality, the underlying template is of low cardinality and can be effectively used
   *       for grouping and aggregation.
   * </ul>
   * @deprecated This item has been removed in 1.21.0 version of the semantic conventions.
   */
  @Deprecated
  public static final AttributeKey<String> MESSAGING_SOURCE_TEMPLATE =
      stringKey("messaging.source.template");

  /**
   * A boolean that is true if the message source is temporary and might not exist anymore after
   * messages are processed.
   * @deprecated This item has been removed in 1.21.0 version of the semantic conventions.
   */
  @Deprecated
  public static final AttributeKey<Boolean> MESSAGING_SOURCE_TEMPORARY =
      booleanKey("messaging.source.temporary");

  /**
   * A boolean that is true if the message source is anonymous (could be unnamed or have
   * auto-generated name).
   * @deprecated This item has been removed in 1.21.0 version of the semantic conventions.
   */
  @Deprecated
  public static final AttributeKey<Boolean> MESSAGING_SOURCE_ANONYMOUS =
      booleanKey("messaging.source.anonymous");

  /**
   * The identifier for the consumer receiving a message. For Kafka, set it to {@code
   * {messaging.kafka.consumer.group} - {messaging.kafka.client_id}}, if both are present, or only
   * {@code messaging.kafka.consumer.group}. For brokers, such as RabbitMQ and Artemis, set it to
   * the {@code client_id} of the client consuming the message.
   * @deprecated This item has been removed in 1.21.0 version of the semantic conventions. See {@link SemanticAttributes#MESSAGING_CLIENT_ID}.
   */
  @Deprecated
  public static final AttributeKey<String> MESSAGING_CONSUMER_ID =
      stringKey("messaging.consumer.id");

  /**
   * Client Id for the Consumer or Producer that is handling the message.
   * @deprecated This item has been removed in 1.21.0 version of the semantic conventions. See {@link SemanticAttributes#MESSAGING_CLIENT_ID}.
   */
  @Deprecated
  public static final AttributeKey<String> MESSAGING_KAFKA_CLIENT_ID =
      stringKey("messaging.kafka.client_id");

  /**
   * Partition the message is received from.
   * @deprecated This item has been removed in 1.21.0 version of the semantic conventions.
   */
  @Deprecated
  public static final AttributeKey<Long> MESSAGING_KAFKA_SOURCE_PARTITION =
      longKey("messaging.kafka.source.partition");

  /**
   * The unique identifier for each client.
   * @deprecated This item has been removed in 1.21.0 version of the semantic conventions. See {@link SemanticAttributes#MESSAGING_CLIENT_ID}.
   */
  @Deprecated
  public static final AttributeKey<String> MESSAGING_ROCKETMQ_CLIENT_ID =
      stringKey("messaging.rocketmq.client_id");

  /**
   * Enum values for {@link #NET_HOST_CONNECTION_TYPE}.
   * @deprecated This item has been removed as of 1.21.0 of the semantic conventions. Use {@link NetworkConnectionTypeValues} instead.
   */
  @Deprecated
  public static final class NetHostConnectionTypeValues {
    /** wifi. */
    public static final String WIFI = "wifi";

    /** wired. */
    public static final String WIRED = "wired";

    /** cell. */
    public static final String CELL = "cell";

    /** unavailable. */
    public static final String UNAVAILABLE = "unavailable";

    /** unknown. */
    public static final String UNKNOWN = "unknown";

    private NetHostConnectionTypeValues() {}
  }

  /**
   * Enum values for {@link #NET_HOST_CONNECTION_SUBTYPE}.
   * @deprecated This item has been removed as of 1.21.0 of the semantic conventions. Use {@link NetworkConnectionSubtypeValues} instead.
   */
  @Deprecated
  public static final class NetHostConnectionSubtypeValues {
    /** GPRS. */
    public static final String GPRS = "gprs";

    /** EDGE. */
    public static final String EDGE = "edge";

    /** UMTS. */
    public static final String UMTS = "umts";

    /** CDMA. */
    public static final String CDMA = "cdma";

    /** EVDO Rel. 0. */
    public static final String EVDO_0 = "evdo_0";

    /** EVDO Rev. A. */
    public static final String EVDO_A = "evdo_a";

    /** CDMA2000 1XRTT. */
    public static final String CDMA2000_1XRTT = "cdma2000_1xrtt";

    /** HSDPA. */
    public static final String HSDPA = "hsdpa";

    /** HSUPA. */
    public static final String HSUPA = "hsupa";

    /** HSPA. */
    public static final String HSPA = "hspa";

    /** IDEN. */
    public static final String IDEN = "iden";

    /** EVDO Rev. B. */
    public static final String EVDO_B = "evdo_b";

    /** LTE. */
    public static final String LTE = "lte";

    /** EHRPD. */
    public static final String EHRPD = "ehrpd";

    /** HSPAP. */
    public static final String HSPAP = "hspap";

    /** GSM. */
    public static final String GSM = "gsm";

    /** TD-SCDMA. */
    public static final String TD_SCDMA = "td_scdma";

    /** IWLAN. */
    public static final String IWLAN = "iwlan";

    /** 5G NR (New Radio). */
    public static final String NR = "nr";

    /** 5G NRNSA (New Radio Non-Standalone). */
    public static final String NRNSA = "nrnsa";

    /** LTE CA. */
    public static final String LTE_CA = "lte_ca";

    private NetHostConnectionSubtypeValues() {}
  }

  /**
   * Immediate client peer port number.
   *
   * @deprecated This item has renamed in 1.22.0 of the semantic conventions. Use {@link SemanticAttributes#NETWORK_PEER_PORT} on server telemetry and {@link SemanticAttributes#NETWORK_LOCAL_PORT} on client telemetry instead.
   */
  @Deprecated
  public static final AttributeKey<Long> CLIENT_SOCKET_PORT = longKey("client.socket.port");

  /**
   * Name of the memory pool.
   *
   * <p>Notes:
   *
   * <ul>
   *   <li>Pool names are generally obtained via <a
   *       href="https://docs.oracle.com/en/java/javase/11/docs/api/java.management/java/lang/management/MemoryPoolMXBean.html#getName()">MemoryPoolMXBean#getName()</a>.
   * </ul>
   * @deprecated This item has renamed in 1.22.0 of the semantic conventions. Use {@link SemanticAttributes#JVM_MEMORY_POOL_NAME} instead.
   */
  @Deprecated
  public static final AttributeKey<String> POOL = stringKey("pool");

  /**
   * The domain name of the source system.
   *
   * <p>Notes:
   *
   * <ul>
   *   <li>This value may be a host name, a fully qualified domain name, or another host naming
   *       format.
   * </ul>
   * @deprecated This item has renamed in 1.22.0 of the semantic conventions.
   */
  @Deprecated
  public static final AttributeKey<String> SOURCE_DOMAIN = stringKey("source.domain");

  /**
   * Physical server IP address or Unix socket address. If set from the client, should simply use
   * the socket's peer address, and not attempt to find any actual server IP (i.e., if set from
   * client, this may represent some proxy server instead of the logical server).
   *
   * @deprecated This item has renamed in 1.22.0 of the semantic conventions. Use {@link SemanticAttributes#NETWORK_LOCAL_ADDRESS} on server telemetry and {@link SemanticAttributes#NETWORK_PEER_ADDRESS} on client telemetry instead.
   */
  @Deprecated
  public static final AttributeKey<String> SERVER_SOCKET_ADDRESS =
      stringKey("server.socket.address");

  /**
   * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is
   * unknown whether the compressed or uncompressed payload size is reported.
   *
   * @deprecated This item has renamed in 1.22.0 of the semantic conventions. Use {@link SemanticAttributes#MESSAGING_MESSAGE_BODY_SIZE} instead.
   */
  @Deprecated
  public static final AttributeKey<Long> MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES =
      longKey("messaging.message.payload_size_bytes");

  /**
   * The domain name of the destination system.
   *
   * @deprecated This item has renamed in 1.22.0 of the semantic conventions.
   */
  @Deprecated
  public static final AttributeKey<String> DESTINATION_DOMAIN = stringKey("destination.domain");

  /**
   * The compressed size of the message payload in bytes.
   *
   * @deprecated This item has renamed in 1.22.0 of the semantic conventions.
   */
  @Deprecated
  public static final AttributeKey<Long> MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES =
      longKey("messaging.message.payload_compressed_size_bytes");

  /**
   * The domain name of an immediate peer.
   *
   * <p>Notes:
   *
   * <ul>
   *   <li>Typically observed from the client side, and represents a proxy or other intermediary
   *       domain name.
   * </ul>
   *
   * @deprecated This item has renamed in 1.22.0 of the semantic conventions.
   */
  @Deprecated
  public static final AttributeKey<String> SERVER_SOCKET_DOMAIN = stringKey("server.socket.domain");

  /**
   * The type of memory.
   *
   * @deprecated This item has renamed in 1.22.0 of the semantic conventions. Use {@link SemanticAttributes#JVM_MEMORY_TYPE} instead.
   */
  @Deprecated
  public static final AttributeKey<String> TYPE = stringKey("type");

  /**
   * Physical server port.
   *
   * @deprecated This item has renamed in 1.22.0 of the semantic conventions. Use {@link SemanticAttributes#NETWORK_LOCAL_PORT} on server telemetry and {@link SemanticAttributes#NETWORK_PEER_PORT} on client telemetry instead.
   */
  @Deprecated
  public static final AttributeKey<Long> SERVER_SOCKET_PORT = longKey("server.socket.port");

  /**
   * Immediate client peer address - unix domain socket name, IPv4 or IPv6 address.
   *
   * @deprecated This item has renamed in 1.22.0 of the semantic conventions. Use {@link SemanticAttributes#NETWORK_PEER_ADDRESS} on server telemetry and {@link SemanticAttributes#NETWORK_LOCAL_ADDRESS} on client telemetry instead.
   */
  @Deprecated
  public static final AttributeKey<String> CLIENT_SOCKET_ADDRESS =
      stringKey("client.socket.address");

  /**
   * @deprecated This item has been removed as of 1.21.0 of the semantic conventions. Use {@link JvmMemoryTypeValues} instead.
   */
  @Deprecated
  public static final class TypeValues {
    /** Heap memory. */
    public static final String HEAP = "heap";

    /** Non-heap memory. */
    public static final String NON_HEAP = "non_heap";

    private TypeValues() {}
  }

  {% endif %}

  {%- if class == "ResourceAttributes" %}

  /**
   * Red Hat OpenShift on Google Cloud.
   * @deprecated This item has been removed as of 1.18.0 of the semantic conventions. Use {@link ResourceAttributes#GCP_OPENSHIFT} instead.
   */
  @Deprecated
  public static final String GCP_OPENSHIFT = "gcp_openshift";

  /**
   * Full user-agent string provided by the browser
   *
   * <p>Notes:
   *
   * <ul>
   *   <li>The user-agent value SHOULD be provided only from browsers that do not have a mechanism
   *       to retrieve brands and platform individually from the User-Agent Client Hints API. To
   *       retrieve the value, the legacy {@code navigator.userAgent} API can be used.
   * </ul>
   * @deprecated This item has been renamed in 1.19.0 version of the semantic conventions. Use {@link io.opentelemetry.semconv.SemanticAttributes#USER_AGENT_ORIGINAL} instead.
   */
  @Deprecated
  public static final AttributeKey<String> BROWSER_USER_AGENT = stringKey("browser.user_agent");

  /**
   * The unique ID of the single function that this runtime instance executes.
   *
   * <p>Notes:
   *
   * <ul>
   *   <li>On some cloud providers, it may not be possible to determine the full ID at startup, so
   *       consider setting {@code faas.id} as a span attribute instead.
   *   <li>The exact value to use for {@code faas.id} depends on the cloud provider:
   *   <li><strong>AWS Lambda:</strong> The function <a
   *       href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a>.
   *       Take care not to use the &quot;invoked ARN&quot; directly but replace any <a
   *       href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html">alias
   *       suffix</a> with the resolved function version, as the same runtime instance may be
   *       invokable with multiple different aliases.
   *   <li><strong>GCP:</strong> The <a
   *       href="https://cloud.google.com/iam/docs/full-resource-names">URI of the resource</a>
   *   <li><strong>Azure:</strong> The <a
   *       href="https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id">Fully
   *       Qualified Resource ID</a> of the invoked function, <em>not</em> the function app, having
   *       the form {@code
   *       /subscriptions/<SUBSCIPTION_GUID>/resourceGroups/<RG>/providers/Microsoft.Web/sites/<FUNCAPP>/functions/<FUNC>}.
   *       This means that a span attribute MUST be used, as an Azure function app can host multiple
   *       functions that would usually share a TracerProvider.
   * </ul>
   * @deprecated This item has been removed in 1.19.0 version of the semantic conventions. Use {@link ResourceAttributes#CLOUD_RESOURCE_ID} instead.
   */
  @Deprecated
  public static final AttributeKey<String> FAAS_ID = stringKey("faas.id");

  /**
   * The version string of the auto instrumentation agent, if used.
   *
   * @deprecated This item has renamed in 1.22.0 of the semantic conventions. Use {@link ResourceAttributes#TELEMETRY_DISTRO_VERSION} instead.
   */
  @Deprecated
  public static final AttributeKey<String> TELEMETRY_AUTO_VERSION = stringKey("telemetry.auto.version");

  /**
   * Container image tag.
   *
   * @deprecated This item has renamed in 1.22.0 of the semantic conventions. Use {@link ResourceAttributes#CONTAINER_IMAGE_TAGS} instead.
   */
  @Deprecated
  public static final AttributeKey<String> CONTAINER_IMAGE_TAG = stringKey("container.image.tag");

  {% endif %}

  private {{class}}() {}
}
